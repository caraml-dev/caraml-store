# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from feast_spark.api import JobService_pb2 as feast__spark_dot_api_dot_JobService__pb2


class JobServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartOfflineToOnlineIngestionJob = channel.unary_unary(
                '/feast_spark.api.JobService/StartOfflineToOnlineIngestionJob',
                request_serializer=feast__spark_dot_api_dot_JobService__pb2.StartOfflineToOnlineIngestionJobRequest.SerializeToString,
                response_deserializer=feast__spark_dot_api_dot_JobService__pb2.StartOfflineToOnlineIngestionJobResponse.FromString,
                )
        self.ScheduleOfflineToOnlineIngestionJob = channel.unary_unary(
                '/feast_spark.api.JobService/ScheduleOfflineToOnlineIngestionJob',
                request_serializer=feast__spark_dot_api_dot_JobService__pb2.ScheduleOfflineToOnlineIngestionJobRequest.SerializeToString,
                response_deserializer=feast__spark_dot_api_dot_JobService__pb2.ScheduleOfflineToOnlineIngestionJobResponse.FromString,
                )
        self.UnscheduleOfflineToOnlineIngestionJob = channel.unary_unary(
                '/feast_spark.api.JobService/UnscheduleOfflineToOnlineIngestionJob',
                request_serializer=feast__spark_dot_api_dot_JobService__pb2.UnscheduleOfflineToOnlineIngestionJobRequest.SerializeToString,
                response_deserializer=feast__spark_dot_api_dot_JobService__pb2.UnscheduleOfflineToOnlineIngestionJobResponse.FromString,
                )
        self.GetHistoricalFeatures = channel.unary_unary(
                '/feast_spark.api.JobService/GetHistoricalFeatures',
                request_serializer=feast__spark_dot_api_dot_JobService__pb2.GetHistoricalFeaturesRequest.SerializeToString,
                response_deserializer=feast__spark_dot_api_dot_JobService__pb2.GetHistoricalFeaturesResponse.FromString,
                )
        self.ListJobs = channel.unary_unary(
                '/feast_spark.api.JobService/ListJobs',
                request_serializer=feast__spark_dot_api_dot_JobService__pb2.ListJobsRequest.SerializeToString,
                response_deserializer=feast__spark_dot_api_dot_JobService__pb2.ListJobsResponse.FromString,
                )
        self.CancelJob = channel.unary_unary(
                '/feast_spark.api.JobService/CancelJob',
                request_serializer=feast__spark_dot_api_dot_JobService__pb2.CancelJobRequest.SerializeToString,
                response_deserializer=feast__spark_dot_api_dot_JobService__pb2.CancelJobResponse.FromString,
                )
        self.GetJob = channel.unary_unary(
                '/feast_spark.api.JobService/GetJob',
                request_serializer=feast__spark_dot_api_dot_JobService__pb2.GetJobRequest.SerializeToString,
                response_deserializer=feast__spark_dot_api_dot_JobService__pb2.GetJobResponse.FromString,
                )
        self.GetHealthMetrics = channel.unary_unary(
                '/feast_spark.api.JobService/GetHealthMetrics',
                request_serializer=feast__spark_dot_api_dot_JobService__pb2.GetHealthMetricsRequest.SerializeToString,
                response_deserializer=feast__spark_dot_api_dot_JobService__pb2.GetHealthMetricsResponse.FromString,
                )


class JobServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StartOfflineToOnlineIngestionJob(self, request, context):
        """Start job to ingest data from offline store into online store
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScheduleOfflineToOnlineIngestionJob(self, request, context):
        """Start scheduled job to ingest data from offline store into online store
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnscheduleOfflineToOnlineIngestionJob(self, request, context):
        """Unschedule job to ingest data from offline store into online store
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHistoricalFeatures(self, request, context):
        """Produce a training dataset, return a job id that will provide a file reference
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListJobs(self, request, context):
        """List all types of jobs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelJob(self, request, context):
        """Cancel a single job
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJob(self, request, context):
        """Get details of a single job
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHealthMetrics(self, request, context):
        """Get ingestion health metrics for a Feature Table
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartOfflineToOnlineIngestionJob': grpc.unary_unary_rpc_method_handler(
                    servicer.StartOfflineToOnlineIngestionJob,
                    request_deserializer=feast__spark_dot_api_dot_JobService__pb2.StartOfflineToOnlineIngestionJobRequest.FromString,
                    response_serializer=feast__spark_dot_api_dot_JobService__pb2.StartOfflineToOnlineIngestionJobResponse.SerializeToString,
            ),
            'ScheduleOfflineToOnlineIngestionJob': grpc.unary_unary_rpc_method_handler(
                    servicer.ScheduleOfflineToOnlineIngestionJob,
                    request_deserializer=feast__spark_dot_api_dot_JobService__pb2.ScheduleOfflineToOnlineIngestionJobRequest.FromString,
                    response_serializer=feast__spark_dot_api_dot_JobService__pb2.ScheduleOfflineToOnlineIngestionJobResponse.SerializeToString,
            ),
            'UnscheduleOfflineToOnlineIngestionJob': grpc.unary_unary_rpc_method_handler(
                    servicer.UnscheduleOfflineToOnlineIngestionJob,
                    request_deserializer=feast__spark_dot_api_dot_JobService__pb2.UnscheduleOfflineToOnlineIngestionJobRequest.FromString,
                    response_serializer=feast__spark_dot_api_dot_JobService__pb2.UnscheduleOfflineToOnlineIngestionJobResponse.SerializeToString,
            ),
            'GetHistoricalFeatures': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHistoricalFeatures,
                    request_deserializer=feast__spark_dot_api_dot_JobService__pb2.GetHistoricalFeaturesRequest.FromString,
                    response_serializer=feast__spark_dot_api_dot_JobService__pb2.GetHistoricalFeaturesResponse.SerializeToString,
            ),
            'ListJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListJobs,
                    request_deserializer=feast__spark_dot_api_dot_JobService__pb2.ListJobsRequest.FromString,
                    response_serializer=feast__spark_dot_api_dot_JobService__pb2.ListJobsResponse.SerializeToString,
            ),
            'CancelJob': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelJob,
                    request_deserializer=feast__spark_dot_api_dot_JobService__pb2.CancelJobRequest.FromString,
                    response_serializer=feast__spark_dot_api_dot_JobService__pb2.CancelJobResponse.SerializeToString,
            ),
            'GetJob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJob,
                    request_deserializer=feast__spark_dot_api_dot_JobService__pb2.GetJobRequest.FromString,
                    response_serializer=feast__spark_dot_api_dot_JobService__pb2.GetJobResponse.SerializeToString,
            ),
            'GetHealthMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHealthMetrics,
                    request_deserializer=feast__spark_dot_api_dot_JobService__pb2.GetHealthMetricsRequest.FromString,
                    response_serializer=feast__spark_dot_api_dot_JobService__pb2.GetHealthMetricsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'feast_spark.api.JobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class JobService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StartOfflineToOnlineIngestionJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/feast_spark.api.JobService/StartOfflineToOnlineIngestionJob',
            feast__spark_dot_api_dot_JobService__pb2.StartOfflineToOnlineIngestionJobRequest.SerializeToString,
            feast__spark_dot_api_dot_JobService__pb2.StartOfflineToOnlineIngestionJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScheduleOfflineToOnlineIngestionJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/feast_spark.api.JobService/ScheduleOfflineToOnlineIngestionJob',
            feast__spark_dot_api_dot_JobService__pb2.ScheduleOfflineToOnlineIngestionJobRequest.SerializeToString,
            feast__spark_dot_api_dot_JobService__pb2.ScheduleOfflineToOnlineIngestionJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnscheduleOfflineToOnlineIngestionJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/feast_spark.api.JobService/UnscheduleOfflineToOnlineIngestionJob',
            feast__spark_dot_api_dot_JobService__pb2.UnscheduleOfflineToOnlineIngestionJobRequest.SerializeToString,
            feast__spark_dot_api_dot_JobService__pb2.UnscheduleOfflineToOnlineIngestionJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHistoricalFeatures(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/feast_spark.api.JobService/GetHistoricalFeatures',
            feast__spark_dot_api_dot_JobService__pb2.GetHistoricalFeaturesRequest.SerializeToString,
            feast__spark_dot_api_dot_JobService__pb2.GetHistoricalFeaturesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/feast_spark.api.JobService/ListJobs',
            feast__spark_dot_api_dot_JobService__pb2.ListJobsRequest.SerializeToString,
            feast__spark_dot_api_dot_JobService__pb2.ListJobsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/feast_spark.api.JobService/CancelJob',
            feast__spark_dot_api_dot_JobService__pb2.CancelJobRequest.SerializeToString,
            feast__spark_dot_api_dot_JobService__pb2.CancelJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/feast_spark.api.JobService/GetJob',
            feast__spark_dot_api_dot_JobService__pb2.GetJobRequest.SerializeToString,
            feast__spark_dot_api_dot_JobService__pb2.GetJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHealthMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/feast_spark.api.JobService/GetHealthMetrics',
            feast__spark_dot_api_dot_JobService__pb2.GetHealthMetricsRequest.SerializeToString,
            feast__spark_dot_api_dot_JobService__pb2.GetHealthMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
